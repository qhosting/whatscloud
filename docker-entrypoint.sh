#!/bin/bash
set -e

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}ChatCenter Docker Entrypoint${NC}"
echo -e "${GREEN}========================================${NC}"

# Function to extract domain from URL
extract_domain() {
    local url="$1"
    # Remove protocol (http:// or https://)
    local domain="${url#http://}"
    domain="${domain#https://}"
    # Remove trailing slash and path
    domain="${domain%%/*}"
    # Remove port if present
    domain="${domain%%:*}"
    echo "$domain"
}

# Get domain from environment variables
# Priority: APP_DOMAIN > APP_URL > default to localhost
if [ -n "$APP_DOMAIN" ]; then
    DOMAIN="$APP_DOMAIN"
    echo -e "${GREEN}✓ Using APP_DOMAIN: $DOMAIN${NC}"
elif [ -n "$APP_URL" ]; then
    DOMAIN=$(extract_domain "$APP_URL")
    echo -e "${GREEN}✓ Extracted domain from APP_URL: $DOMAIN${NC}"
else
    DOMAIN="localhost"
    echo -e "${YELLOW}⚠ No APP_DOMAIN or APP_URL set, using default: $DOMAIN${NC}"
fi

# Configure Apache ServerName
echo -e "${GREEN}Configuring Apache ServerName...${NC}"

# Update the default Apache site configuration
APACHE_CONF="/etc/apache2/sites-available/000-default.conf"

if [ -f "$APACHE_CONF" ]; then
    # Check if ServerName already exists in the config
    if grep -q "ServerName" "$APACHE_CONF"; then
        # Replace existing ServerName
        sed -i "s/ServerName .*/ServerName $DOMAIN/" "$APACHE_CONF"
    else
        # Add ServerName after <VirtualHost *:80>
        sed -i "/<VirtualHost \*:80>/a \    ServerName $DOMAIN" "$APACHE_CONF"
    fi
    echo -e "${GREEN}✓ Apache ServerName set to: $DOMAIN${NC}"
else
    echo -e "${RED}✗ Apache configuration file not found: $APACHE_CONF${NC}"
fi

# Also set ServerName in the main Apache config to suppress warnings
echo "ServerName $DOMAIN" >> /etc/apache2/apache2.conf

# Create or update PHP configuration file with environment variables
echo -e "${GREEN}Creating PHP environment configuration...${NC}"

PHP_ENV_CONFIG="/var/www/html/config.env.php"
cat > "$PHP_ENV_CONFIG" << EOF
<?php
/**
 * Environment Configuration
 * Auto-generated by docker-entrypoint.sh
 * This file provides environment variables to the PHP application
 */

// Database Configuration
define('DB_HOST', getenv('DB_HOST') ?: 'db');
define('DB_DATABASE', getenv('DB_DATABASE') ?: 'chatcenter');
define('DB_USER', getenv('DB_USER') ?: 'chatcenter_user');
define('DB_PASSWORD', getenv('DB_PASSWORD') ?: '');
define('DB_PORT', getenv('DB_PORT') ?: '3306');

// Application Configuration
define('APP_ENV', getenv('APP_ENV') ?: 'production');
define('APP_DEBUG', getenv('APP_DEBUG') === 'true' ? true : false);
define('API_KEY', getenv('API_KEY') ?: '');

// Domain Configuration
define('APP_DOMAIN', getenv('APP_DOMAIN') ?: '$DOMAIN');
define('APP_URL', getenv('APP_URL') ?: 'http://$DOMAIN');

// Meta/WhatsApp API Configuration
define('META_API_TOKEN', getenv('META_API_TOKEN') ?: '');
define('META_PHONE_NUMBER_ID', getenv('META_PHONE_NUMBER_ID') ?: '');
define('META_BUSINESS_ID', getenv('META_BUSINESS_ID') ?: '');
define('META_WEBHOOK_TOKEN', getenv('META_WEBHOOK_TOKEN') ?: '');

// OpenAI Configuration
define('OPENAI_API_KEY', getenv('OPENAI_API_KEY') ?: '');
define('OPENAI_MODEL', getenv('OPENAI_MODEL') ?: 'gpt-3.5-turbo');

// Helper function to get base URL
function getBaseUrl() {
    \$protocol = (!empty(\$_SERVER['HTTPS']) && \$_SERVER['HTTPS'] !== 'off' || \$_SERVER['SERVER_PORT'] == 443) ? "https://" : "http://";
    \$domainName = \$_SERVER['SERVER_NAME'];
    return \$protocol . \$domainName;
}
EOF

chown www-data:www-data "$PHP_ENV_CONFIG"
chmod 644 "$PHP_ENV_CONFIG"
echo -e "${GREEN}✓ PHP environment configuration created at: $PHP_ENV_CONFIG${NC}"

# Set proper permissions for application directories
echo -e "${GREEN}Setting proper permissions...${NC}"
chown -R www-data:www-data /var/www/html
find /var/www/html -type d -exec chmod 755 {} \;
find /var/www/html -type f -exec chmod 644 {} \;
echo -e "${GREEN}✓ Permissions set${NC}"

# Display environment information
echo -e "${GREEN}========================================${NC}"
echo -e "${GREEN}Environment Configuration:${NC}"
echo -e "${GREEN}========================================${NC}"
echo -e "Domain: ${YELLOW}$DOMAIN${NC}"
echo -e "DB Host: ${YELLOW}${DB_HOST:-db}${NC}"
echo -e "DB Name: ${YELLOW}${DB_DATABASE:-chatcenter}${NC}"
echo -e "Environment: ${YELLOW}${APP_ENV:-production}${NC}"
echo -e "${GREEN}========================================${NC}"

# Start Apache
echo -e "${GREEN}Starting Apache...${NC}"
echo -e "${GREEN}========================================${NC}"

# Execute the CMD from Dockerfile (apache2-foreground)
exec "$@"
